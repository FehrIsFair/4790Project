type Anime {
  id: Int!
  idMal: Int!
  Title: Int!
  description: string!!
  genres: [string]!
  source: string!
  synonyms: [string]!
  CoverImage: Int!
}

type Manga {
  id: Int!
  idMal: Int!
  Title: Int!
  description: string!!
  genres: [string]!
  source: string!
  synonyms: [string]!
  CoverImage: Int!
}

type Title {
  id: Int!
  romanji: string
  english: string
  native: string
  userPreferred: string
}

type CoverImage {
  id: Int!
  extraLarge: string
  large: string
  medium: string
  color: string
}

type List {
  id: Int!
  uid: string!
  animeList: [Int!]
  mangaList: [Int!]
}

type Mutation {
  searchAnime(data: AnimeSearchInput!, term: String): [Anime!]
  searchManga(data: MnagaSearchInput!, term: String): [Manga!]
  saveList: List!
  editList: List!
  deleteList: List!
}

type Query {
  allAnime: [Anime!]!
  allManga: [Manga!]!
  singleList: List!
  singleAnime: Anime!
  singleManga: Manga!
}